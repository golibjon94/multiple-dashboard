{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Node\\\\dashboard\\\\dashboard-app\\\\src\\\\components\\\\dropdown\\\\Dropdown.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport \"./dropdown.css\"; // const clickOutsideRef = (content_ref, toggle_ref) => {\n//   document.addEventListener(\"mousedown\", (e) => {\n//     // user click toggle\n//     if (toogle_ref.current && toggle_ref.current.contains(e.target)) {\n//       content_ref.current.classList.toggle(\"active\");\n//     } else {\n//       // user click outside toggle and content\n//       if (content_ref.current && !content_ref.current.contains(e.target)) {\n//         content_ref.current.classList.remove(\"active\");\n//       }\n//     }\n//   });\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dropdown = props => {\n  _s();\n\n  const dropdown__toggle_el = useRef(null);\n  const dropdown__content_el = useRef(null);\n  clickOutsideRef(dropdown__content_el, dropdown__toggle_el);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      ref: dropdown__toggle_el,\n      className: \"dropdown__toggle\",\n      children: [props.icon ? /*#__PURE__*/_jsxDEV(\"i\", {\n        className: props.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 23\n      }, this) : \"\", props.badge ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dropdown__toogle-badge\",\n        children: props.badge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this) : \"\", props.customToggle ? props.customToggle() : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: dropdown__content_el,\n      className: \"dropdown__content\",\n      children: [props.contentData && props.renderItems ? props.contentData.map((item, index) => props.renderItems(item, index)) : \"\", props.renderFooter ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown__footer\",\n        children: props.renderFooter()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dropdown, \"LZtHGQ02N2htBh2QL9serTUcnFo=\");\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["D:/React-Node/dashboard/dashboard-app/src/components/dropdown/Dropdown.jsx"],"names":["React","useRef","Dropdown","props","dropdown__toggle_el","dropdown__content_el","clickOutsideRef","icon","badge","customToggle","contentData","renderItems","map","item","index","renderFooter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AAEA,OAAO,gBAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,mBAAmB,GAAGH,MAAM,CAAC,IAAD,CAAlC;AACA,QAAMI,oBAAoB,GAAGJ,MAAM,CAAC,IAAD,CAAnC;AAEAK,EAAAA,eAAe,CAACD,oBAAD,EAAuBD,mBAAvB,CAAf;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAQ,MAAA,GAAG,EAAEA,mBAAb;AAAkC,MAAA,SAAS,EAAC,kBAA5C;AAAA,iBACGD,KAAK,CAACI,IAAN,gBAAa;AAAG,QAAA,SAAS,EAAEJ,KAAK,CAACI;AAApB;AAAA;AAAA;AAAA;AAAA,cAAb,GAA8C,EADjD,EAEGJ,KAAK,CAACK,KAAN,gBACC;AAAM,QAAA,SAAS,EAAC,wBAAhB;AAAA,kBAA0CL,KAAK,CAACK;AAAhD;AAAA;AAAA;AAAA;AAAA,cADD,GAGC,EALJ,EAOGL,KAAK,CAACM,YAAN,GAAqBN,KAAK,CAACM,YAAN,EAArB,GAA4C,EAP/C;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAK,MAAA,GAAG,EAAEJ,oBAAV;AAAgC,MAAA,SAAS,EAAC,mBAA1C;AAAA,iBACGF,KAAK,CAACO,WAAN,IAAqBP,KAAK,CAACQ,WAA3B,GACGR,KAAK,CAACO,WAAN,CAAkBE,GAAlB,CAAsB,CAACC,IAAD,EAAOC,KAAP,KACpBX,KAAK,CAACQ,WAAN,CAAkBE,IAAlB,EAAwBC,KAAxB,CADF,CADH,GAIG,EALN,EAOGX,KAAK,CAACY,YAAN,gBACC;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,kBAAmCZ,KAAK,CAACY,YAAN;AAAnC;AAAA;AAAA;AAAA;AAAA,cADD,GAGC,EAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA/BD;;GAAMb,Q;;KAAAA,Q;AAiCN,eAAeA,QAAf","sourcesContent":["import React, { useRef } from \"react\";\r\n\r\nimport \"./dropdown.css\";\r\n\r\n// const clickOutsideRef = (content_ref, toggle_ref) => {\r\n//   document.addEventListener(\"mousedown\", (e) => {\r\n//     // user click toggle\r\n//     if (toogle_ref.current && toggle_ref.current.contains(e.target)) {\r\n//       content_ref.current.classList.toggle(\"active\");\r\n//     } else {\r\n//       // user click outside toggle and content\r\n//       if (content_ref.current && !content_ref.current.contains(e.target)) {\r\n//         content_ref.current.classList.remove(\"active\");\r\n//       }\r\n//     }\r\n//   });\r\n// };\r\n\r\nconst Dropdown = (props) => {\r\n  const dropdown__toggle_el = useRef(null);\r\n  const dropdown__content_el = useRef(null);\r\n\r\n  clickOutsideRef(dropdown__content_el, dropdown__toggle_el);\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <button ref={dropdown__toggle_el} className=\"dropdown__toggle\">\r\n        {props.icon ? <i className={props.icon}></i> : \"\"}\r\n        {props.badge ? (\r\n          <span className=\"dropdown__toogle-badge\">{props.badge}</span>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {props.customToggle ? props.customToggle() : \"\"}\r\n      </button>\r\n      <div ref={dropdown__content_el} className=\"dropdown__content\">\r\n        {props.contentData && props.renderItems\r\n          ? props.contentData.map((item, index) =>\r\n              props.renderItems(item, index)\r\n            )\r\n          : \"\"}\r\n\r\n        {props.renderFooter ? (\r\n          <div className=\"dropdown__footer\">{props.renderFooter()}</div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n"]},"metadata":{},"sourceType":"module"}