{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Node\\\\dashboard\\\\dashboard-app\\\\src\\\\allmaps\\\\components\\\\RegionsData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./regionsData.css\";\nimport { allDatas } from \"../allDatas\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { addRegionsInfos } from \"../redux/regionsSlice\";\nimport data from \"../datas/apidatas.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegionsData() {\n  _s();\n\n  const [categories, setcategories] = useState([]);\n  const {\n    id\n  } = useParams();\n  const filteredDatas = allDatas.filter((item, name) => item.id === id);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    filteredDatas.map((item, name) => setcategories(item.infos));\n  }, []);\n\n  const getDatas = (id, name) => {\n    alert(id, name);\n    const filterData = data.filter(item => item.id == id);\n    dispatch(addRegionsInfos(filterData)); // axios.get(\"https://jsonplaceholder.typicode.com/users\")\n    // .then(res=>dispatch(addRegionsInfos(res.data)))\n    // .catch(err=>console.log(err.message))\n  }; // const hoverHandling=(id)=>{\n  //   alert(id)\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: true,\n    children: filteredDatas.map(itemm => /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: itemm.name,\n      baseprofile: \"tiny\",\n      width: \"530\",\n      height: \"600\",\n      stroke: \"#ffffff\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      \"stroke-width\": \"2\",\n      version: \"1.2\",\n      viewbox: \"0 0 1000 652\",\n      border: \"1px\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        children: categories === null || categories === void 0 ? void 0 : categories.map(item => /*#__PURE__*/_jsxDEV(\"path\", {\n          // onMouseOver={(id)=>{hoverHandling(item.id)}}\n          onClick: (id, name) => {\n            getDatas(item.id, item.name);\n          },\n          id: item.id,\n          d: item.d\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"673.4\",\n        cy: \"626\",\n        id: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"637.6\",\n        cy: \"506\",\n        id: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"636\",\n        cy: \"498.9\",\n        id: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegionsData, \"r7jmgIYWXhff7sFxm5LCvo5RcLk=\", false, function () {\n  return [useParams, useDispatch];\n});\n\n_c = RegionsData;\nexport default RegionsData;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegionsData\");","map":{"version":3,"sources":["D:/React-Node/dashboard/dashboard-app/src/allmaps/components/RegionsData.js"],"names":["React","useState","useEffect","allDatas","useParams","axios","useDispatch","addRegionsInfos","data","RegionsData","categories","setcategories","id","filteredDatas","filter","item","name","dispatch","map","infos","getDatas","alert","filterData","itemm","d"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./regionsData.css\";\r\nimport { allDatas } from \"../allDatas\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addRegionsInfos} from \"../redux/regionsSlice\"\r\nimport data from \"../datas/apidatas.json\";\r\n\r\nfunction RegionsData() {\r\n  const [categories, setcategories] = useState([]);\r\n  const { id } = useParams();\r\n \r\n  const filteredDatas = allDatas.filter((item, name) => item.id === id);\r\n const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    filteredDatas.map((item, name) => setcategories(item.infos));\r\n  }, []);\r\n\r\n\r\nconst getDatas=(id,name)=>{\r\n   alert(id,name)\r\n const filterData=data.filter(item=>item.id==id)\r\n    dispatch(addRegionsInfos(filterData))\r\n    // axios.get(\"https://jsonplaceholder.typicode.com/users\")\r\n    // .then(res=>dispatch(addRegionsInfos(res.data)))\r\n    // .catch(err=>console.log(err.message))\r\n}\r\n// const hoverHandling=(id)=>{\r\n//   alert(id)\r\n// }\r\n  return (\r\n    <div class>\r\n   \r\n {filteredDatas.map(itemm=>(\r\n   \r\n  <svg\r\n        id={itemm.name}\r\n        baseprofile=\"tiny\"\r\n        width=\"530\"\r\n        height=\"600\"\r\n        stroke=\"#ffffff\"\r\n        stroke-linecap=\"round\"\r\n        stroke-linejoin=\"round\"\r\n        stroke-width=\"2\"\r\n        version=\"1.2\"\r\n        viewbox=\"0 0 1000 652\"\r\n        border=\"1px\"\r\n\r\n       \r\n      >\r\n        \r\n        <svg>\r\n          {categories?.map((item) => (\r\n            \r\n            <path\r\n            // onMouseOver={(id)=>{hoverHandling(item.id)}}\r\n            onClick={(id,name)=>{getDatas(item.id,item.name)}}\r\n             id={item.id} d={item.d} />\r\n             \r\n          ))}\r\n        </svg>\r\n        <circle cx=\"673.4\" cy=\"626\" id=\"0\"></circle>\r\n        <circle cx=\"637.6\" cy=\"506\" id=\"1\"></circle>\r\n        <circle cx=\"636\" cy=\"498.9\" id=\"2\"></circle>\r\n      </svg>\r\n))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegionsData;\r\n"]},"metadata":{},"sourceType":"module"}